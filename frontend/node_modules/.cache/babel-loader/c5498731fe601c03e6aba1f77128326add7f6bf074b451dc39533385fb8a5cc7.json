{"ast":null,"code":"var _jsxFileName = \"/Users/ruubendiazz/Desktop/JunctionX/frontend/src/components/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Navbar from './Navbar';\nimport '../styles/App.css';\nimport ImageUpload from './ImageUpload';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [serverResponse, setServerResponse] = useState(null);\n  const handleUpload = async imageUrl => {\n    console.log(\"Imagen subida en:\", imageUrl);\n    try {\n      // Enviar la URL de la imagen al servidor\n      let response = await fetch('http://localhost:3001/process-image', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          imageUrl: imageUrl\n        })\n      });\n      let data = await response.json();\n\n      // Mostrar la respuesta en la página\n      setServerResponse(data.message);\n    } catch (error) {\n      console.error(\"Hubo un error al procesar la imagen:\", error);\n      setServerResponse(\"Error al procesar la imagen. Por favor, intenta de nuevo.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(ImageUpload, {\n        onUpload: handleUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), serverResponse && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"server-response\",\n        children: serverResponse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Bienvenido a Examfy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"G6913rBAZNysRHrZqJLGwkxooJU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Navbar","ImageUpload","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","serverResponse","setServerResponse","handleUpload","imageUrl","console","log","response","fetch","method","headers","body","JSON","stringify","data","json","message","error","children","className","onUpload","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ruubendiazz/Desktop/JunctionX/frontend/src/components/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Navbar from './Navbar';\nimport '../styles/App.css';\nimport ImageUpload from './ImageUpload';\n\nfunction App() {\n    const [serverResponse, setServerResponse] = useState(null);\n\n    const handleUpload = async (imageUrl) => {\n        console.log(\"Imagen subida en:\", imageUrl);\n\n        try {\n            // Enviar la URL de la imagen al servidor\n            let response = await fetch('http://localhost:3001/process-image', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ imageUrl: imageUrl })\n            });\n\n            let data = await response.json();\n\n            // Mostrar la respuesta en la página\n            setServerResponse(data.message);\n        } catch (error) {\n            console.error(\"Hubo un error al procesar la imagen:\", error);\n            setServerResponse(\"Error al procesar la imagen. Por favor, intenta de nuevo.\");\n        }\n    };\n\n    return (\n        <>\n            <div className=\"App\">\n                <ImageUpload onUpload={handleUpload} />\n                {serverResponse && <div className=\"server-response\">{serverResponse}</div>}\n            </div>\n            <div>\n                <h1>Bienvenido a Examfy</h1>\n                <Navbar />\n            </div>\n        </>\n    );\n}\n\nexport default App;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAO,mBAAmB;AAC1B,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE1D,MAAMW,YAAY,GAAG,MAAOC,QAAQ,IAAK;IACrCC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,QAAQ,CAAC;IAE1C,IAAI;MACA;MACA,IAAIG,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAE;QAC9DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAET,QAAQ,EAAEA;QAAS,CAAC;MAC/C,CAAC,CAAC;MAEF,IAAIU,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;;MAEhC;MACAb,iBAAiB,CAACY,IAAI,CAACE,OAAO,CAAC;IACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZZ,OAAO,CAACY,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAC5Df,iBAAiB,CAAC,2DAA2D,CAAC;IAClF;EACJ,CAAC;EAED,oBACIN,OAAA,CAAAE,SAAA;IAAAoB,QAAA,gBACItB,OAAA;MAAKuB,SAAS,EAAC,KAAK;MAAAD,QAAA,gBAChBtB,OAAA,CAACF,WAAW;QAAC0B,QAAQ,EAAEjB;MAAa;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACtCvB,cAAc,iBAAIL,OAAA;QAAKuB,SAAS,EAAC,iBAAiB;QAAAD,QAAA,EAAEjB;MAAc;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzE,CAAC,eACN5B,OAAA;MAAAsB,QAAA,gBACItB,OAAA;QAAAsB,QAAA,EAAI;MAAmB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5B5B,OAAA,CAACH,MAAM;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC;EAAA,eACR,CAAC;AAEX;AAACxB,EAAA,CAtCQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AAwCZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}